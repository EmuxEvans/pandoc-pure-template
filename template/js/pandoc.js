jQuery(function($) { 
  $(document).ready( function() { 
    var $sidenav = $("#pandoc_nav")
    var $body = $("body");
    var $refer;
    var first_section_offset = "0px";

    function get_number(text)
    {
      return parseInt(text.replace(/[^0-9-]/ig,""));
    }

    function get_css_value(tag, css)
    {//Inspire by http://stackoverflow.com/questions/2707790/get-a-css-value-from-external-style-sheet-with-javascript-jquery
      var tag_text = '<' + tag + ' id="just-a-temporary-id"></' + tag + '>';
      var $tag = $(tag_text).hide().appendTo("body");
      var css_value = $(tag + "[id]").css(css);
      $tag.remove();
      return get_number(css_value);
    }

    function init_refer()
    {
        var head_refer_margin_top = get_css_value("h2", "margin-top")
        var caption_refer_margin_top = get_css_value("caption", "margin-top");
        first_section_offset = (caption_refer_margin_top - head_refer_margin_top) + "px";
        $refer = $("h1[id], h2[id], h3[id], h4[id], h5[id], h6[id], caption[id], .caption[id], .figure[id], .footnoteRef[id]");
    }

 
    //Generated table of content
    function generate_toc()
    {
      $sidenav.toc();
      var navWidth = $sidenav.width();
      $(".sidenav").width(navWidth);
    }


    //Assume that the caption of figure is 'figure1 foo bar bala bala ba la'
    //This function will return the first world figure1
    function make_caption_id(caption)
    {
      var worlds = caption.split(' ', 1);
      if(worlds.length)
        return worlds[0];
      else
        return "";
    }
    
    //Update figure caption for figure that generated by R
    function update_figure_caption(caption_is_above_figure)
    {
      var $caps =  $('.caption');

      $caps.each(function(idx, cap){
        var $cap = $(cap);
        var id = make_caption_id($cap.html());
        if (caption_is_above_figure)
        {
          $cap.addClass('caption-above')
              .attr('id', id);

          /*Move The Title To Above The Figure*/
          var $img = $cap.prev("img");
          if($img.length)
            $img.addClass('img-below')
                .before(cap);
        }
        else
        {
          var $parent = $cap.parent();
          $parent.attr('id', id);
        }
      });
    }

    //Update table caption for generated by R
    function update_table_caption()
    {
      var $caps =  $('caption');

      $caps.each(function(idx, cap){
        var $cap = $(cap);
        var id = make_caption_id($cap.html());
        $cap.attr('id', id);
      });
    }

    function init_dock()
    {
      var $full_screen = $("#full_screen");
      var $window = $(window);
      var $dock = $("#dock");

      function update_dock_position()
      {
        var $doc_content = $("#doc_content");
        
        var dock_right = $window.width() - ($doc_content.outerWidth() + 
                                          $doc_content.position().left +
                                          $dock.outerWidth());

        $dock.css({"right": dock_right + "px"});
      }

      function full_screnn_listener() 
      {
        var scroll_top = $window.scrollTop();
 
       //TODO it is ugly, should be rewritten
       if($full_screen.hasClass("glyphicon-resize-small"))
        {//Shows Title, TOC and Footer, strink content width
          $(".navbar").show();
          $sidenav.show();
          $("#doc_content").attr('class', 'col-lg-9');
          $body.attr("style", "");
          $refer.attr("style", "");
        }
        else
        {//Hides Title, TOC and Footer, expand content width
          $(".navbar").hide();
          $sidenav.hide();
          $("#doc_content").attr('class', 'col-lg-12');
          $body.css({"padding-top": "0px"});
          $refer.css({"padding-top": "0px", "margin-top": "0px"});
          $("h1[id]:first-child").css({"margin-top": first_section_offset});
        }
        $full_screen.toggleClass("glyphicon-resize-small");

        return false;
      }

      function update_go_to_top()
      {
        var height = $window.height();
        var $go_to_top = $("#go_to_top");
        if($window.scrollTop() > height)
          $go_to_top.show();
        else
          $go_to_top.hide();
      }

      $full_screen.click(full_screnn_listener);

      $window.resize(update_dock_position)
             .scroll(update_go_to_top);

      update_dock_position();
      update_go_to_top();
      $dock.show();
    }

    generate_toc();
    update_figure_caption();
    update_table_caption();
    init_refer();
    init_dock();
  }); 
}); 
